repeat task.wait() until game:IsLoaded()

local library = {}
local spawnConnections = {}
local utils = {}

local canLoadPolaris = true--getgenv().EOIFHEIUFHu0e98fekwjfbnweiurghfueiyrgy9re088ug
local hurttime = 0

if not canLoadPolaris then return end

Players = game:GetService("Players")
Lighting = game:GetService("Lighting")
ReplicatedStorage = game:GetService("ReplicatedStorage")
UserInputService = game:GetService("UserInputService")
LocalPlayer = Players.LocalPlayer
Character = LocalPlayer.Character
Humanoid = Character.Humanoid
PrimaryPart = Character.PrimaryPart
PlayerGui = LocalPlayer.PlayerGui
PlayerScripts = LocalPlayer.PlayerScripts
Camera = workspace.Camera
CurrentCamera = workspace.CurrentCamera
RunService = game["Run Service"]
TweenService = game.TweenService
DefaultChatSystemChatEvents = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents")
inventory = workspace[LocalPlayer.Name].InventoryFolder.Value
local inventory = workspace[LocalPlayer.Name].InventoryFolder.Value
local CollectionService = game:GetService("CollectionService")

local config = {
	Buttons = {},
	Toggles = {},
	Options = {},
	Keybinds = {}
}

local function saveConfig()
	local encrypt = game:GetService("HttpService"):JSONEncode(config)
	if isfile("Aurora/config.json") then
		delfile("Aurora/config.json")
	end
	writefile("Aurora/config.json",encrypt)
end

local function loadConfig()
	local decrypt = game:GetService("HttpService"):JSONDecode(readfile("Aurora/config.json"))
	config = decrypt
end

if not isfile("Aurora/config.json") then
	makefolder("Aurora")
	saveConfig()
end

task.wait(0.001)
loadConfig()
task.wait(0.001)

sethiddenproperty = function(X,Y,Z)
	pcall(function()
		X[Y] = Z
	end)
end

LocalPlayer.CharacterAdded:Connect(function(char)
	repeat task.wait(1) until char ~= nil

	Character = char
	Humanoid = char.Humanoid
	PrimaryPart = char.PrimaryPart
	Camera = workspace.Camera
	CurrentCamera = workspace.CurrentCamera

	Character.Archivable = true

	for i,v in next, spawnConnections do
		task.spawn(function() v(char) end)
	end
end)

table.insert(spawnConnections,function(char)
	task.wait(1)
	inventory = workspace[LocalPlayer.Name].InventoryFolder.Value
end)

library.WindowCount = 0
library.Color = Color3.fromRGB(0, 191, 255)
library.KeyBind = Enum.KeyCode.RightShift
library.Modules = {}
library.Modules.Rotations = false

local ScreenGui = Instance.new("ScreenGui", PlayerGui)
ScreenGui.ResetOnSpawn = false

UserInputService.InputBegan:Connect(function(key,gpe)
	if key.KeyCode == library.KeyBind then
		cmdBar.Visible = not cmdBar.Visible
	end
end)

local mobile = Instance.new("TextButton", ScreenGui)
	mobile.Position = UDim2.fromScale(0, 0.2)
	mobile.Size = UDim2.fromScale(0.05, 0.08)
	mobile.BorderSizePixel = 3
    mobile.TextScaled = true
    mobile.TextColor3 = Color3.new(255,255,255)
	mobile.BackgroundColor3 = Color3.new(0.627451, 0.098039, 0.647059)
	mobile.Name = "ToggleUi"
    mobile.Draggable = true
	mobile.Text = "Aurora"
    mobile.TextScaled = true
    mobile.Font = Enum.Font.RobotoMono
    local stroke = Instance.new("UIStroke",mobile)
    stroke.Thickness = 3
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
       local stroke2 = Instance.new("UIStroke",mobile)
    stroke2.Thickness = 2
	

	local corner = Instance.new("UICorner", mobile)

	mobile.MouseButton1Down:Connect(function()
		for i,v in pairs(ScreenGui:GetChildren()) do
			if v.Name == "ArrayList" or v.Name == "Logo" or v.Name == "Stats" or v.Name == "ToggleUi" then
				continue
			end 
			v.Visible = not v.Visible
		end
	end)

local arrayFrame = Instance.new("Frame",ScreenGui)
arrayFrame.Size = UDim2.fromScale(0.3,1)
arrayFrame.Position = UDim2.fromScale(0.7,0)
arrayFrame.BackgroundTransparency = 1
local sort = Instance.new("UIListLayout",arrayFrame)
sort.SortOrder = Enum.SortOrder.LayoutOrder

local arrayStuff = {}

local id = "http://www.roblox.com/asset/?id=7498352732"

local arrayListFrame = Instance.new("Frame",ScreenGui)
arrayListFrame.Size = UDim2.fromScale(0.2,1)
arrayListFrame.Position = UDim2.fromScale(0.795,0.03)
arrayListFrame.BackgroundTransparency = 1
arrayListFrame.Name = "ArrayList"
local sort = Instance.new("UIListLayout",arrayListFrame)
sort.SortOrder = Enum.SortOrder.LayoutOrder
sort.HorizontalAlignment = Enum.HorizontalAlignment.Right

local colors = {
	["CottonCandy"] = {
		["Main"] = Color3.fromRGB(234, 149, 255),
		["Second"] = Color3.fromRGB(143, 253, 255)
	},
	["Purple"] = {
		["Main"] = Color3.fromRGB(191, 0, 255),
		["Second"] = Color3.fromRGB(119, 0, 255)
	},
	["Blue"] = {
		["Main"] = Color3.fromRGB(135, 206, 255),
		["Second"] = Color3.fromRGB(135, 206, 255)
	},
	["Wave4Mc"] = {
		["Main"] = Color3.fromRGB(76, 118, 255),
		["Second"] = Color3.fromRGB(255, 255, 255)
	},
	["Hackerman"] = {
		["Main"] = Color3.fromRGB(0, 145, 17),
		["Second"] = Color3.fromRGB(255, 255, 255)
	},
	["Blurple"] = { -- Springs fav frfrfrfrfrfrfrfr :D
		["Main"] = Color3.fromRGB(124, 7, 191),
		["Second"] = Color3.fromRGB(66, 2, 227)
	},
}

local imageId = "http://www.roblox.com/asset/?id=5857213084"
local currentTheme = colors.Blue
local arrayItems = {}
local arraylist = {
	Create = function(o)

		local item = Instance.new("TextLabel",arrayListFrame)
		item.Text = o
		item.BackgroundTransparency = 0.3
		item.BorderSizePixel = 0
		item.BackgroundColor3 = Color3.fromRGB(0,0,0)
		item.Size = UDim2.new(0,0,0,0)
		item.TextSize = 12
		item.TextColor3 = Color3.fromRGB(255,255,255)
		--item.TextXAlignment = Enum.TextXAlignment.Right

		local glow = Instance.new("ImageLabel",item)
		glow.Size = UDim2.fromScale(4,4)
		glow.BackgroundTransparency = 1
		glow.Image = imageId
		glow.ImageTransparency = 0.3
		glow.Position = UDim2.fromScale(-1,-1.5)
		glow.ZIndex = -10

		local size = UDim2.new(0.01,game.TextService:GetTextSize(o,22,Enum.Font.SourceSans,Vector2.new(0,0)).X,0.033,0)

		if o == "" then
			size = UDim2.fromScale(0,0)
		end

		item.Size = size

		item.BackgroundTransparency = 0.6
		item.TextTransparency = 0

		table.insert(arrayItems,item)
		table.sort(arrayItems,function(a,b) return game.TextService:GetTextSize(a.Text.."  ",30,Enum.Font.SourceSans,Vector2.new(0,0)).X > game.TextService:GetTextSize(b.Text.."  ",30,Enum.Font.SourceSans,Vector2.new(0,0)).X end)
		for i,v in ipairs(arrayItems) do
			v.LayoutOrder = i
		end

	end,
	Remove = function(o)
		table.sort(arrayItems,function(a,b) return game.TextService:GetTextSize(a.Text.."  ",30,Enum.Font.SourceSans,Vector2.new(0,0)).X > game.TextService:GetTextSize(b.Text.."  ",30,Enum.Font.SourceSans,Vector2.new(0,0)).X end)
		local c = 0
		for i,v in ipairs(arrayItems) do
			c += 1
			if (v.Text == o) then
				v:Destroy()
				table.remove(arrayItems,c)
			else
				v.LayoutOrder = i
			end
		end
	end,
}

arraylist.Create("")

task.spawn(function()
	local loops = 0
	repeat task.wait()
		loops += 1
		local count = 0

		local half = #arrayItems / 2
		local glowTemps = {}
		for i,v in pairs(arrayItems) do
			count += 1
			local formula = ((count - 1) / (#arrayItems - 1))
			local offset = math.sin(tick() * 2 + formula * 2 * math.pi) / 0.5
			game.TweenService:Create(v,TweenInfo.new(0.5),{
				TextColor3 = currentTheme.Main:Lerp(currentTheme.Second,math.clamp(offset + 0.5,0,1))
			}):Play()
			game.TweenService:Create(v.ImageLabel,TweenInfo.new(0.5),{
				ImageColor3 = currentTheme.Main:Lerp(currentTheme.Second,math.clamp(offset + 0.5,0,1))
			}):Play()
		end

		if loops > 1 then
			for i,v in pairs(glowTemps) do
				v:Destroy()
			end

			table.clear(glowTemps)
		end
	until false
end)


function NewTween(item, totime, toChange)
	TweenService:Create(item, totime, toChange):Play()
end

local NOTIFY_FRAME = Instance.new("Frame", ScreenGui)
NOTIFY_FRAME.Position = UDim2.fromScale(0.8, 0.5)
NOTIFY_FRAME.Size = UDim2.fromScale(0.19, 0.4)
NOTIFY_FRAME.BackgroundTransparency = 1

local SORT_NOTIFY_FRAME = Instance.new("UIListLayout", NOTIFY_FRAME)
SORT_NOTIFY_FRAME.SortOrder = Enum.SortOrder.LayoutOrder
SORT_NOTIFY_FRAME.VerticalAlignment = Enum.VerticalAlignment.Bottom
SORT_NOTIFY_FRAME.Padding = UDim.new(0, 5)

function library:Notification(Description, Time)
	spawn(function()
		local newNotif = Instance.new("TextLabel", NOTIFY_FRAME)
		newNotif.Size = UDim2.fromScale(0.9, 0.1)
		newNotif.Position = UDim2.fromScale(0, 0)
		newNotif.BorderSizePixel = 0
		newNotif.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		newNotif.BackgroundTransparency = 0.4
		newNotif.TextColor3 = Color3.fromRGB(255,255,255)
		newNotif.TextScaled = true
		newNotif.Text = Description

		local Box = Instance.new("Frame", newNotif)
		Box.Position = UDim2.fromScale(-0.05, 0)
		Box.Size = UDim2.fromScale(0.05, 1)
		Box.BorderSizePixel = 0
		Box.BackgroundColor3 = library.Color

		task.delay(Time, function()
			NewTween(newNotif, TweenInfo.new(1), {Transparency = 1})
			NewTween(Box, TweenInfo.new(1), {Transparency = 1})
		end)
	end)
end

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

function CreateNotification(Title, Duration, Message)
    Notification:Notify(
        {Title = Title, Description = Message},
        {OutlineColor = Color3.fromRGB(0, 191, 255), Time = Duration, Type = "image"},
        {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(0, 191, 255)}
    )
end

function CreateNotification2(Title, Duration, Message)
    Notification:Notify(
        {Title = Title, Description = Message},
        {OutlineColor = Color3.fromRGB(255, 255, 0), Time = Duration, Type = "image"},
        {Image = "http://www.roblox.com/asset/?id=6031071053", ImageColor = Color3.fromRGB(255, 255, 0)}
    )
end

function CreateNotificationStaffDetector(Title, Duration, Message)
    sound = Instance.new("Sound",workspace)
    sound.Name = "Noooooooooooooooot noooooooooooooooooooooooot"
    sound.SoundId = "rbxassetid://7396762708"
    sound:Play()

    Notification:Notify(
        {Title = Title, Description = Message},
        {OutlineColor = Color3.fromRGB(255, 0, 0), Time = Duration, Type = "image"},
        {Image = "http://www.roblox.com/asset/?id=6031071053", ImageColor = Color3.fromRGB(255, 84, 84)}
    )
end

library.NewWindow = function(name)
	local textlabel = Instance.new("TextLabel", ScreenGui)
	textlabel.Position = UDim2.fromScale(0.1 + (library.WindowCount / 8), 0.1)
	textlabel.Size = UDim2.fromScale(0.1, 0.0425)
	textlabel.Text = name
	textlabel.Name = name
	textlabel.BorderSizePixel = 1
	textlabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	textlabel.BackgroundTransparency = 0.2
	textlabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	textlabel.BorderColor3 = Color3.fromRGB(50, 50, 50)
	textlabel.ZIndex = 2

	local modules = Instance.new("Frame", textlabel)
	modules.Size = UDim2.fromScale(1, 5)
	modules.Position = UDim2.fromScale(0, 1)
	modules.BackgroundTransparency = 1
	modules.BorderSizePixel = 0

	local sortmodules = Instance.new("UIListLayout", modules)
	sortmodules.SortOrder = Enum.SortOrder.Name

	UserInputService.InputBegan:Connect(function(k, g)
		if g then return end
		if k == nil then return end
		if k.KeyCode == library.KeyBind then
			textlabel.Visible = not textlabel.Visible
		end
	end)

	library.WindowCount += 1

	local lib = {}

	lib.NewButton = function(Table)
		library.Modules[Table.Name] = {
			Keybind = Table.Keybind,
		}

		if config.Buttons[Table.Name] == nil then
			config.Buttons[Table.Name] = {
				Enabled = false,
			}
		else
			saveConfig()
		end

		if config.Keybinds[Table.Name] == nil then
			config.Keybinds[Table.Name] = tostring(Table.Keybind):split(".")[3] or "Unknown"
		end

		library.Modules[Table.Name].Keybind = Enum.KeyCode[config.Keybinds[Table.Name]]

		local enabled = false
		local textbutton = Instance.new("TextButton", modules)
		textbutton.Size = UDim2.fromScale(1, 0.2)
		textbutton.Position = UDim2.fromScale(0, 0)
		textbutton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		textbutton.BackgroundTransparency = 0.3
		textbutton.BorderSizePixel = 1
		textbutton.BorderColor3 = Color3.fromRGB(70, 70, 70)
		textbutton.Text = Table.Name
		textbutton.Name = Table.Name
		textbutton.TextColor3 = Color3.fromRGB(255, 255, 255)

		local dropdown = Instance.new("Frame", textbutton)
		dropdown.Position = UDim2.fromScale(0, 1)
		dropdown.Size = UDim2.fromScale(1, 5)
		dropdown.BackgroundTransparency = 1
		dropdown.Visible = false

		local dropdownsort = Instance.new("UIListLayout", dropdown)
		dropdownsort.SortOrder = Enum.SortOrder.Name

		local lib2 = {}
		lib2.Enabled = false

		lib2.ToggleButton = function(v)
			if v then
				enabled = true
			else
				enabled = not enabled
			end

			if enabled then
				arraylist.Create(Table.Name)
				CreateNotification("Aurora", 5, Table.Name .. " has been enabled")
			else
				arraylist.Remove(Table.Name)
				CreateNotification("Aurora", 5, Table.Name .. " has been disabled")
			end

			lib2.Enabled = enabled
			task.spawn(function()
				task.delay(0.1, function()
					Table.Function(enabled)
				end)
			end)

			textbutton.BackgroundColor3 = (textbutton.BackgroundColor3 == Color3.fromRGB(60, 60, 60) and library.Color or Color3.fromRGB(60, 60, 60))
			config.Buttons[Table.Name].Enabled = enabled
			saveConfig()
		end

		local keybindButton = Instance.new("TextButton", dropdown)
        keybindButton.Size = UDim2.fromScale(1, 0.15)
        keybindButton.Position = UDim2.fromScale(0, 0)
        keybindButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        keybindButton.BackgroundTransparency = 0.3
        keybindButton.BorderSizePixel = 1
        keybindButton.BorderColor3 = Color3.fromRGB(70, 70, 70)
        keybindButton.Text = "Keybind: " .. config.Keybinds[Table.Name]
        keybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)

        local keybindConnection
        keybindButton.MouseButton1Down:Connect(function()
            keybindConnection = game.UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if gameProcessed then return end
                keybindButton.Text = "Keybind: " .. tostring(input.KeyCode):split(".")[3]
                config.Keybinds[Table.Name] = tostring(input.KeyCode):split(".")[3]
                library.Modules[Table.Name].Keybind = Enum.KeyCode[config.Keybinds[Table.Name]]
                task.wait(0.06)
                saveConfig()
                keybindConnection:Disconnect()
            end)
        end)

		lib2.NewToggle = function(v)
			local Enabled = false

			if config.Toggles[v.Name .. "_" .. Table.Name] == nil then
				config.Toggles[v.Name .. "_" .. Table.Name] = {Enabled = false}
			end

			local textbutton2 = Instance.new("TextButton", dropdown)
			textbutton2.Size = UDim2.fromScale(1, 0.15)
			textbutton2.Position = UDim2.fromScale(0, 0)
			textbutton2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			textbutton2.BackgroundTransparency = 0.3
			textbutton2.BorderSizePixel = 1
			textbutton2.BorderColor3 = Color3.fromRGB(70, 70, 70)
			textbutton2.Text = v.Name
			textbutton2.Name = v.Name
			textbutton2.TextColor3 = Color3.fromRGB(255, 255, 255)

			local v2 = {}
			v2.Enabled = Enabled

			v2.ToggleButton = function(v3)
				if v3 then
					Enabled = v3
				else
					Enabled = not Enabled
				end
				v2.Enabled = Enabled
				task.spawn(function()
					v["Function"](Enabled)
				end)
				textbutton2.BackgroundColor3 = (textbutton2.BackgroundColor3 == Color3.fromRGB(60, 60, 60) and library.Color or Color3.fromRGB(60, 60, 60))
				config.Toggles[v.Name .. "_" .. Table.Name].Enabled = Enabled
				saveConfig()
			end

			textbutton2.MouseButton1Down:Connect(function()
				v2.ToggleButton()
			end)

			if config.Toggles[v.Name .. "_" .. Table.Name].Enabled then
				v2.ToggleButton()
			end

			return v2
		end

		lib2.NewPicker = function(v)
			local Enabled = false

			if config.Options[v.Name .. "_" .. Table.Name] == nil then
				config.Options[v.Name .. "_" .. Table.Name] = {Option = v.Options[1]}
			end

			local textbutton2 = Instance.new("TextButton", dropdown)
			textbutton2.Size = UDim2.fromScale(1, 0.15)
			textbutton2.Position = UDim2.fromScale(0, 0)
			textbutton2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			textbutton2.BackgroundTransparency = 0.3
			textbutton2.BorderSizePixel = 1
			textbutton2.BorderColor3 = Color3.fromRGB(70, 70, 70)
			textbutton2.Text = v.Name .. " - " .. v.Options[1]
			textbutton2.Name = v.Name
			textbutton2.TextColor3 = Color3.fromRGB(255, 255, 255)

			local v2 = {
				Option = v.Options[1]
			}

			local index = 0
			textbutton2.MouseButton1Down:Connect(function()
				index += 1

				if index > #v.Options then
					index = 1
				end

				v2.Option = v.Options[index]
				textbutton2.Text = v.Name .. " - " .. v2.Option

				config.Options[v.Name .. "_" .. Table.Name].Option = v.Options[index]
				saveConfig()
			end)

			textbutton2.MouseButton2Down:Connect(function()
				index -= 1

				if index < 1 then
					index = #v.Options
				end

				v2.Option = v.Options[index]

				textbutton2.Text = v.Name .. " - " .. v2.Option
				config.Options[v.Name .. "_" .. Table.Name].Option = v.Options[index]
				saveConfig()
			end)

			local option = config.Options[v.Name .. "_" .. Table.Name].Option
			v2.Option = option
			textbutton2.Text = v.Name .. " - " .. option

			return v2
		end

		textbutton.MouseButton1Down:Connect(function()
			lib2.ToggleButton()
		end)

		textbutton.MouseButton2Down:Connect(function()
			dropdown.Visible = not dropdown.Visible
			for i, v in pairs(modules:GetChildren()) do
				if v.Name == Table.Name then continue end
				if v:IsA("UIListLayout") then continue end
				v.Visible = not v.Visible
			end
		end)

		UserInputService.InputBegan:Connect(function(k, g)
			if g then return end
			if k == nil then return end
			if k.KeyCode == library.Modules[Table.Name].Keybind and k.KeyCode ~= Enum.KeyCode.Unknown then
				lib2.ToggleButton()
			end
		end)

		if config.Buttons[Table.Name].Enabled then
			lib2.ToggleButton()
		end

		return lib2
	end

	return lib
end


local colors = {
	["CottonCandy"] = {
		["Main"] = Color3.fromRGB(234, 149, 255),
		["Second"] = Color3.fromRGB(143, 253, 255)
	},
	["Purple"] = {
		["Main"] = Color3.fromRGB(191, 0, 255),
		["Second"] = Color3.fromRGB(119, 0, 255)
	},
	["Wave4Mc"] = {
		["Main"] = Color3.fromRGB(76, 118, 255),
		["Second"] = Color3.fromRGB(255, 255, 255)
	},
	["Hackerman"] = {
		["Main"] = Color3.fromRGB(0, 145, 17),
		["Second"] = Color3.fromRGB(255, 255, 255)
	},
	["Blurple"] = { -- Springs fav frfrfrfrfrfrfrfr :D
		["Main"] = Color3.fromRGB(124, 7, 191),
		["Second"] = Color3.fromRGB(66, 2, 227)
	},
}

Combat = library.NewWindow("Combat")
Blatant = library.NewWindow("Blatant")
Utility = library.NewWindow("Utility")
Visuals = library.NewWindow("Visuals")
World = library.NewWindow("World")
Gui = library.NewWindow("Gui")

local weaponMeta = loadstring(game:HttpGet("https://raw.githubusercontent.com/nil5623we/LOLJKA/main/weaponMeta", true))()
local Functions = loadstring(game:HttpGet("https://raw.githubusercontent.com/nil5623we/LOLJKA/main/FunctionTable", true))()
local Utilities = loadstring(game:HttpGet("https://raw.githubusercontent.com/nil5623we/LOLJKA/main/utils", true))()

local netmanaged = ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged
local blockenginemanaged = ReplicatedStorage.rbxts_include.node_modules:WaitForChild("@easy-games"):WaitForChild("block-engine").node_modules:WaitForChild("@rbxts").net.out:WaitForChild("_NetManaged")

local getRemote = Functions.getRemote

local function hasItem(item)
	if inventory:FindFirstChild(item) then
		return true, 1
	end
	return false
end

local function getBestWeapon()
	local bestSword
	local bestSwordMeta = 0
	for i, sword in ipairs(weaponMeta) do
		local name = sword[1]
		local meta = sword[2]
		if meta > bestSwordMeta and hasItem(name) then
			bestSword = name
			bestSwordMeta = meta
		end
	end
	return inventory:FindFirstChild(bestSword)
end

local function getNearestPlayer(range)
	local nearest
	local nearestDist = math.huge
	for i,v in pairs(game.Players:GetPlayers()) do
		pcall(function()
			if v == LocalPlayer or v.Team == LocalPlayer.Team then return end
			if v.Character.Humanoid.health > 0 and (v.Character.PrimaryPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude < nearestDist and (v.Character.PrimaryPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude <= range then
				nearest = v
				nearestDist = (v.Character.PrimaryPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
			end
		end)
	end
	return nearest
end

local Define = true

local SetInvItem = getRemote("SetInvItem")
local function spoofHand(item)
	if hasItem(item) then
		SetInvItem:InvokeServer({
			["hand"] = inventory:WaitForChild(item)
		})
	end
end

local knitRecieved, knit
knitRecieved, knit = pcall(function()
	repeat task.wait()
		return debug.getupvalue(require(LocalPlayer.PlayerScripts.TS.knit).setup, 6)
	until knitRecieved
end)

local function getController(name)
	return knit.Controllers[name]
end

local AuraRemote = getRemote("SwordHit")

local viewmodel = Camera.Viewmodel.RightHand.RightWrist
local weld = viewmodel.C0
local oldweld = viewmodel.C0

local animRunning = true
local reverseTween

local animAuraTab = {}

local auraAnimations = {
	["FAST!!!"] = {
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(220), math.rad(100), math.rad(100)),Timer = 0.1},
        {CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(220), math.rad(100), math.rad(100)),Timer = 0.1},
        {CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(220), math.rad(100), math.rad(100)),Timer = 0.1},
	},
}

local funAnimations = {
	PLAYER_VACUUM_SUCK = "rbxassetid://9671620809",
	WINTER_BOSS_SPAWN = "rbxassetid://11843861791",
	GLUE_TRAP_FLYING = "rbxassetid://11466075174",
	VOID_DRAGON_TRANSFORM = "rbxassetid://10967424821",
	SIT_ON_DODO_BIRD = "http://www.roblox.com/asset/?id=2506281703",
	DODO_BIRD_FALL = "rbxassetid://7617326953",
	SWORD_SWING = "rbxassetid://7234367412",
}
